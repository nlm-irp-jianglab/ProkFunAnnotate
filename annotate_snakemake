samples = []
samples_names = {}
outnames = []
for line in open(config['genomes']).readlines(): 
   ssplit = line.strip().split('/')
   name = ssplit[-1]
   samples.append(name)
   path = "/".join(ssplit[:-1])+"/"
   samples_names[name] = path
   outnames.append("{}/{}".format(config["outdir"], name))



print(samples)
rule all:
   input:
      expand("{out}/{sample}/{sample}.gff", zip, sample=samples, out=[config["outdir"]]),
      expand("{out}/{sample}/{sample}.emapper.annotations", zip, sample=samples, out=[config["outdir"]]),
      expand("{out}/{sample}/{sample}.kofam.tsv", zip, sample=samples, out=[config["outdir"]]),
      
rule run_prokka: 
   singularity: "docker://keithdt/prokfunannotate:latest"
   input: lambda wildcards: samples_names[wildcards.sample] + "{sample}.fna"
   output: 
      config["outdir"]+"/"+"{sample}/{sample}.gff",
      config["outdir"]+"/"+"{sample}/{sample}.faa"
   params:
      cpus    = config.get("cpus", "2"),
      prefix  = lambda wildcards: samples_names[wildcards.sample],
      outdir  = "{}/".format(config["outdir"])
   shell:
      """
      mkdir -p outdir
      mkdir -p outdir/{wildcards.sample}
      prokka --cpus {params.cpus} --prefix {wildcards.sample} --outdir {params.outdir}/{wildcards.sample}/ {input}
      """


rule run_emapper:
   singularity: "docker://keithdt/prokfunannotate:latest"
   input: config["outdir"] +"/"+ "{sample}/{sample}.faa"
   output: config["outdir"]+"/"+"{sample}/{sample}.emapper.annotations"
   params:
      cpus    = config.get("cpus", "2"),
      tmp     = config.get("temp_dir", "/tmp/"),
      outdir  = "{}/".format(config["outdir"])
   shell:
      "emapper.py -i {input} -o {params.outdir}/{wildcards.sample}/{wildcards.sample} --temp_dir {params.tmp}  --data_dir /opt/egg_data/ --cpu {params.cpus}"

rule run_kofamscan:
   singularity: "docker://keithdt/prokfunannotate:latest"
   input: config["outdir"] +"/"+ "{sample}/{sample}.faa"
   output: config["outdir"]+"/"+"{sample}/{sample}.kofam.tsv"
   params:
      cpus    = config.get("cpus", "2"),
      tmp = config.get("temp_dir", "/tmp/")
   shell:
      "exec_annotation --tmp-dir {params.tmp} -f detail-tsv -p /opt/kofam_data/profiles/ --ko-list /opt/kofam_data/ko_list --cpu {params.cpus} -o {output} {input}"

